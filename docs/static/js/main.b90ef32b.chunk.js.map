{"version":3,"sources":["components/AddCategory.js","helpers/getGiffs.js","components/GiffGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAExCC,EAFwC,KAE5BC,EAF4B,KAkB/C,OACQ,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKd,SACI,uBAAOO,KAAK,OAAOC,MAAQT,EAC3BU,SAjBc,SAAEP,GACxBQ,QAAQC,IAAKT,EAAEU,OAAOJ,OACtBR,EAAcE,EAAEU,OAAOJ,a,+BCPlBK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAbAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,YAAY,WACRJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAEZ,CAACpB,IAGGqB,EDjByBM,CAAa3B,GAAhCa,EAFwB,EAE9BN,KAAca,EAFgB,EAEhBA,QAGrB,OACI,qCACA,6BAAMpB,IAEJoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAACC,GAAD,OACZ,cAAC,EAAD,eAEQA,GADIA,EAAIC,aEfvBiB,EAAe,WAAK,MAIO5C,mBAAS,CAAC,cAJjB,mBAItB6C,EAJsB,KAIV9C,EAJU,KAW7B,OAEI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ8C,EAAWpB,KAAK,SAACT,EAAU8B,GAAX,OACb,cAAC,EAAD,CAEK9B,SAAWA,GADLA,YCpBlC+B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b90ef32b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) =>{\r\n\r\n    const [inputValue, setInputValue ] = useState(''); //empty string\r\n\r\n    const handleInputChange = ( e ) => {\r\n        console.log( e.target.value );\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n            <form onSubmit={ handleSubmit }>\r\n                <input type=\"text\" value={ inputValue }\r\n                onChange={ handleInputChange }\r\n                />\r\n            </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async( category ) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=HvHS7mX3ZfCK0zvAuk1lyben9Hqwkc88`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    \r\n        \r\n    });\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GiffGridItem';\r\n\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{ category }</h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n        <div className='card-grid'>\r\n                {\r\n                    //I unstructured the array images\r\n                    images.map( (img) => (\r\n                    <GifGridItem\r\n                        key = { img.id }\r\n                        {...img}\r\n                        \r\n                    />\r\n                    ))\r\n                }\r\n        \r\n            </div> \r\n         </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGiffs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setTimeout( ()=> {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                }, 3000)\r\n            })\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n/*\r\n    const handleAdd = () => {\r\n        setCategories( [...categories, 'HunterXHunter'] ); //keep the previous categories and I add another one\r\n        //setCategories(cats => [ ...cats, 'HunterXHunter']); we receive a callback\r\n    }\r\n*/ \r\n    return (\r\n\r\n        <>\r\n            <h2>GiffExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( (category, i) =>  \r\n                       <GifGrid \r\n                            key={ category }\r\n                            category={ category } \r\n\r\n                       \r\n                       />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\n\nReactDOM.render(\n    <GifExpertApp />, \n    document.getElementById('root')\n);\n\n// Crear un componente llamado GiffExpertApp\n// que tendr√° un h2 que diga giffexpertapp\n//<hr />\n"],"sourceRoot":""}